{"version":3,"file":"social-share-buttons.umd.js","sources":["../src/platforms.ts","../src/SocialShareButtons.ts"],"sourcesContent":["import type { Platform, ShareData } from './types';\n\nexport const platforms: Record<string, Platform> = {\n  x: {\n    name: 'x',\n    label: 'X',\n    getShareUrl: (data: ShareData) => {\n      const params = new URLSearchParams();\n      if (data.url) params.set('url', data.url);\n      if (data.text) params.set('text', data.text);\n      if (data.hashtags?.length) params.set('hashtags', data.hashtags.join(','));\n      if (data.via) params.set('via', data.via);\n      return `https://x.com/intent/tweet?${params.toString()}`; // https://developer.x.com/en/docs/x-for-websites/web-intents/overview\n    },\n    color: '#000000',\n  },\n\n  bluesky: {\n    name: 'bluesky',\n    label: 'Bluesky',\n    getShareUrl: (data: ShareData) => {\n      const text = [data.text, data.url].filter(Boolean).join('\\n\\n');\n      const params = new URLSearchParams();\n      if (text) params.set('text', text);\n      return `https://bsky.app/intent/compose?${params.toString()}`; // https://docs.bsky.app/docs/advanced-guides/intent-links\n    },\n    color: '#1185fe',\n  },\n\n  threads: {\n    name: 'threads',\n    label: 'Threads',\n    getShareUrl: (data: ShareData) => {\n      const text = [data.text, data.url].filter(Boolean).join('\\n\\n');\n      const params = new URLSearchParams();\n      if (text) params.set('text', text);\n      return `https://www.threads.net/intent/post?${params.toString()}`; // https://developers.facebook.com/docs/threads/threads-web-intents/\n    },\n    color: '#000000',\n  },\n\n  mastodon: {\n    name: 'mastodon',\n    label: 'Mastodon',\n    getShareUrl: (data: ShareData) => {\n      const text = [data.text, data.url].filter(Boolean).join('\\n\\n');\n      const params = new URLSearchParams();\n      if (text) params.set('text', text);\n      // Note: Mastodon share requires instance selection, using default share interface\n      return `https://mastodon.social/share?${params.toString()}`;\n    },\n    color: '#6364ff',\n  },\n\n  facebook: {\n    name: 'facebook',\n    label: 'Facebook',\n    getShareUrl: (data: ShareData) => {\n      const params = new URLSearchParams();\n      if (data.url) params.set('u', data.url);\n      return `https://www.facebook.com/sharer/sharer.php?${params.toString()}`;\n    },\n    color: '#0866FF',\n  },\n\n  linkedin: {\n    name: 'linkedin',\n    label: 'LinkedIn',\n    getShareUrl: (data: ShareData) => {\n      const params = new URLSearchParams();\n      if (data.url) params.set('url', data.url);\n      return `https://www.linkedin.com/sharing/share-offsite/?${params.toString()}`;\n    },\n    color: '#0077b5',\n  },\n\n  reddit: {\n    name: 'reddit',\n    label: 'Reddit',\n    getShareUrl: (data: ShareData) => {\n      const params = new URLSearchParams();\n      if (data.url) params.set('url', data.url);\n      if (data.title) params.set('title', data.title);\n      return `https://www.reddit.com/submit?${params.toString()}`;\n    },\n    color: '#ff4500',\n  },\n\n  telegram: {\n    name: 'telegram',\n    label: 'Telegram',\n    getShareUrl: (data: ShareData) => {\n      const params = new URLSearchParams();\n      if (data.url) params.set('url', data.url);\n      if (data.text) params.set('text', data.text);\n      return `https://t.me/share/url?${params.toString()}`;\n    },\n    color: '#0088cc',\n  },\n\n  whatsapp: {\n    name: 'whatsapp',\n    label: 'WhatsApp',\n    getShareUrl: (data: ShareData) => {\n      const text = [data.text, data.url].filter(Boolean).join(' ');\n      const params = new URLSearchParams();\n      if (text) params.set('text', text);\n      // Auto-detect mobile vs desktop\n      const isMobile = /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\n      const baseUrl = isMobile ? 'whatsapp://send' : 'https://web.whatsapp.com/send';\n      return `${baseUrl}?${params.toString()}`;\n    },\n    color: '#25d366',\n  },\n\n  email: {\n    name: 'email',\n    label: 'Email',\n    getShareUrl: (data: ShareData) => {\n      const subject = data.title || data.text || '';\n      const body = [data.description, data.url].filter(Boolean).join('\\n\\n');\n      const params = new URLSearchParams();\n      if (subject) params.set('subject', subject);\n      if (body) params.set('body', body);\n      return `mailto:?${params.toString()}`;\n    },\n    color: '#7f7f7f',\n  },\n\n  pinterest: {\n    name: 'pinterest',\n    label: 'Pinterest',\n    getShareUrl: (data: ShareData) => {\n      const params = new URLSearchParams();\n      if (data.url) params.set('url', data.url);\n      if (data.media) params.set('media', data.media);\n      if (data.description) params.set('description', data.description);\n      return `https://pinterest.com/pin/create/button/?${params.toString()}`;\n    },\n    color: '#bd081c',\n  },\n\n  copy: {\n    name: 'copy',\n    label: 'Copy',\n    getShareUrl: (data: ShareData) => {\n      return data.url || window.location.href;\n    },\n    color: '#6c757d',\n  },\n};\n\nexport const defaultPlatforms = ['x', 'facebook', 'whatsapp'];\n\nexport const getPlatform = (name: string): Platform | undefined => {\n  return platforms[name];\n};\n","import type {\n  SocialShareButtonsOptions,\n  SocialShareButtonsInstance,\n  ShareData,\n  PlatformName,\n} from './types';\nimport { platforms, defaultPlatforms, getPlatform } from './platforms';\n\nconst DEFAULT_OPTIONS: Required<Omit<SocialShareButtonsOptions, 'container' | 'labels' | 'customPlatforms' | 'onShare' | 'className' | 'ariaLabel'>> = {\n  platforms: defaultPlatforms as PlatformName[],\n  theme: 'auto',\n  nativeShare: false,\n  popup: true,\n  popupWidth: 550,\n  popupHeight: 420,\n  copiedDuration: 2000,\n};\n\nexport class SocialShareButtons implements SocialShareButtonsInstance {\n  private options: SocialShareButtonsOptions;\n  private container: HTMLElement | null = null;\n  private widget: HTMLElement | null = null;\n  private shareData: ShareData;\n\n  constructor(options: SocialShareButtonsOptions = {}) {\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    this.shareData = this.getDefaultShareData();\n\n    // Add custom platforms if provided\n    if (this.options.customPlatforms) {\n      this.options.customPlatforms.forEach(platform => {\n        platforms[platform.name] = platform;\n      });\n    }\n\n    this.init();\n  }\n\n  private init(): void {\n    // Find or create container\n    if (this.options.container) {\n      if (typeof this.options.container === 'string') {\n        this.container = document.querySelector(this.options.container);\n      } else {\n        this.container = this.options.container;\n      }\n    } else {\n      this.container = document.body;\n    }\n\n    if (!this.container) {\n      throw new Error('SocialShareButtons: Container not found');\n    }\n\n    this.createWidget();\n    this.attachEventListeners();\n    this.updateTheme();\n  }\n\n  private getDefaultShareData(): ShareData {\n    // Try to get data from meta tags\n    const getMeta = (name: string): string | undefined => {\n      const meta = document.querySelector(`meta[property=\"${name}\"], meta[name=\"${name}\"]`);\n      return meta?.getAttribute('content') || undefined;\n    };\n\n    return {\n      url: window.location.href,\n      title: document.title,\n      description: getMeta('og:description') || getMeta('description'),\n      media: getMeta('og:image'),\n    };\n  }\n\n  private createWidget(): void {\n    const widget = document.createElement('div');\n    widget.className = `social-share ${this.options.className || ''}`;\n    widget.setAttribute('role', 'region');\n    widget.setAttribute('aria-label', this.options.ariaLabel || 'Social sharing buttons');\n    widget.setAttribute('data-theme', this.options.theme || 'auto');\n\n    const buttonContainer = document.createElement('div');\n    buttonContainer.className = 'social-share-buttons';\n\n    // Add platform buttons\n    this.options.platforms?.forEach(platformName => {\n      const platform = getPlatform(platformName);\n      if (!platform) return;\n\n      const button = this.createButton(platform.name, platform.label);\n      buttonContainer.appendChild(button);\n    });\n\n    widget.appendChild(buttonContainer);\n    this.container?.appendChild(widget);\n    this.widget = widget;\n  }\n\n  private createButton(platformName: PlatformName, label: string): HTMLElement {\n    const button = document.createElement('button');\n    button.className = 'social-share-button';\n    button.setAttribute('data-platform', platformName);\n    button.setAttribute('type', 'button');\n    button.setAttribute('aria-label', `Share on ${label}`);\n\n    const customLabel = this.options.labels?.[platformName];\n    const displayLabel = customLabel || label;\n\n    button.textContent = displayLabel;\n\n    // Set custom property for theming\n    const platform = getPlatform(platformName);\n    if (platform?.color) {\n      button.style.setProperty('--social-share-buttons-color', platform.color);\n    }\n\n    return button;\n  }\n\n  private attachEventListeners(): void {\n    this.widget?.addEventListener('click', this.handleClick.bind(this));\n\n    // Handle theme changes\n    if (this.options.theme === 'auto') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      mediaQuery.addEventListener('change', () => this.updateTheme());\n    }\n  }\n\n  private async handleClick(event: Event): Promise<void> {\n    const target = event.target as HTMLElement;\n    const button = target.closest('[data-platform]') as HTMLElement;\n\n    if (!button) return;\n\n    event.preventDefault();\n    const platformName = button.getAttribute('data-platform') as PlatformName;\n\n    await this.share(platformName, this.shareData);\n  }\n\n  public async share(platformName: PlatformName, data?: ShareData): Promise<boolean> {\n    const shareData = { ...this.shareData, ...data };\n\n    // Try native share first if enabled and available\n    if (\n      this.options.nativeShare &&\n      platformName !== 'copy' &&\n      this.canUseNativeShare()\n    ) {\n      return this.shareNative(shareData);\n    }\n\n    // Handle copy specially\n    if (platformName === 'copy') {\n      return this.copyToClipboard(shareData.url || window.location.href);\n    }\n\n    const platform = getPlatform(platformName);\n    if (!platform) {\n      console.warn(`SocialShareButtons: Platform \"${platformName}\" not found`);\n      return false;\n    }\n\n    const shareUrl = platform.getShareUrl(shareData);\n\n    // Open share URL\n    if (this.options.popup) {\n      this.openPopup(shareUrl);\n    } else {\n      window.open(shareUrl, '_blank', 'noopener,noreferrer');\n    }\n\n    // Trigger callback\n    this.options.onShare?.(platformName, true);\n\n    return true;\n  }\n\n  private openPopup(url: string): void {\n    const width = this.options.popupWidth || 550;\n    const height = this.options.popupHeight || 420;\n    const left = (window.innerWidth - width) / 2 + window.screenX;\n    const top = (window.innerHeight - height) / 2 + window.screenY;\n\n    const features = `width=${width},height=${height},left=${left},top=${top},scrollbars=yes,resizable=yes`;\n\n    window.open(url, 'share-popup', features);\n  }\n\n  public async shareNative(data?: ShareData): Promise<boolean> {\n    if (!this.canUseNativeShare()) {\n      console.warn('SocialShareButtons: Native share API not available');\n      return false;\n    }\n\n    const shareData = { ...this.shareData, ...data };\n\n    try {\n      await navigator.share({\n        title: shareData.title,\n        text: shareData.text || shareData.description,\n        url: shareData.url,\n      });\n\n      this.options.onShare?.('native' as PlatformName, true);\n      return true;\n    } catch (error) {\n      if ((error as Error).name !== 'AbortError') {\n        console.error('SocialShareButtons: Native share failed', error);\n      }\n      return false;\n    }\n  }\n\n  private canUseNativeShare(): boolean {\n    return 'share' in navigator && navigator.canShare !== undefined;\n  }\n\n  private async copyToClipboard(text: string): Promise<boolean> {\n    try {\n      if (navigator.clipboard && window.isSecureContext) {\n        await navigator.clipboard.writeText(text);\n      } else {\n        // Fallback for older browsers\n        const textarea = document.createElement('textarea');\n        textarea.value = text;\n        textarea.style.position = 'fixed';\n        textarea.style.opacity = '0';\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textarea);\n      }\n\n      // Visual feedback\n      const copyButton = this.widget?.querySelector('[data-platform=\"copy\"]');\n      if (copyButton) {\n        const originalContent = copyButton.innerHTML;\n        const feedbackText = this.options.labels?.copied || 'Copied!';\n        copyButton.innerHTML = feedbackText;\n        setTimeout(() => {\n          copyButton.innerHTML = originalContent;\n        }, this.options.copiedDuration || 2000);\n      }\n\n      this.options.onShare?.('copy', true);\n      return true;\n    } catch (error) {\n      console.error('SocialShareButtons: Copy to clipboard failed', error);\n      return false;\n    }\n  }\n\n  private updateTheme(): void {\n    if (!this.widget) return;\n\n    if (this.options.theme === 'auto') {\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.widget.setAttribute('data-theme', prefersDark ? 'dark' : 'light');\n    } else {\n      this.widget.setAttribute('data-theme', this.options.theme || 'light');\n    }\n  }\n\n  public updateOptions(options: Partial<SocialShareButtonsOptions>): void {\n    this.options = { ...this.options, ...options };\n\n    // Recreate widget with new options\n    if (this.widget) {\n      this.widget.remove();\n      this.createWidget();\n      this.updateTheme();\n    }\n  }\n\n  public destroy(): void {\n    if (this.widget) {\n      this.widget.remove();\n      this.widget = null;\n    }\n  }\n}\n\nexport default SocialShareButtons;\n"],"names":["platforms","data","params","text","subject","body","defaultPlatforms","getPlatform","name","DEFAULT_OPTIONS","SocialShareButtons","options","platform","getMeta","widget","buttonContainer","platformName","button","label","displayLabel","event","shareData","shareUrl","url","width","height","left","top","features","error","textarea","copyButton","originalContent","feedbackText","prefersDark"],"mappings":"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"}